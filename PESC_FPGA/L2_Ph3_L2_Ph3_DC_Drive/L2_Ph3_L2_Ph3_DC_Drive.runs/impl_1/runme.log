
*** Running vivado
    with args -log design_1_wrapper.vdi -applog -m64 -product Vivado -messageDb vivado.pb -mode batch -source design_1_wrapper.tcl -notrace


****** Vivado v2019.1 (64-bit)
  **** SW Build 2552052 on Fri May 24 14:49:42 MDT 2019
  **** IP Build 2548770 on Fri May 24 18:01:18 MDT 2019
    ** Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.

source design_1_wrapper.tcl -notrace
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1700] Loaded user IP repository 'c:/Programming/SINTEF_IP'.
INFO: [IP_Flow 19-1700] Loaded user IP repository 'c:/Programming/PESC_IP'.
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository 'C:/Xilinx/Vivado/2019.1/data/ip'.
add_files: Time (s): cpu = 00:00:08 ; elapsed = 00:00:09 . Memory (MB): peak = 353.691 ; gain = 43.395
Command: link_design -top design_1_wrapper -part xc7z030sbg485-1
Design is defaulting to srcset: sources_1
Design is defaulting to constrset: constrs_1
INFO: [Device 21-403] Loading part xc7z030sbg485-1
INFO: [Netlist 29-17] Analyzing 1980 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds
INFO: [Project 1-479] Netlist was created with Vivado 2019.1
INFO: [Project 1-570] Preparing netlist for logic optimization
Parsing XDC File [c:/Programming/PESC_FPGA/L2_Ph3_L2_Ph3_DC_Drive/L2_Ph3_L2_Ph3_DC_Drive.srcs/sources_1/bd/design_1/ip/design_1_axi_gpio_1_0/design_1_axi_gpio_1_0_board.xdc] for cell 'design_1_i/axi_gpio_1/U0'
Finished Parsing XDC File [c:/Programming/PESC_FPGA/L2_Ph3_L2_Ph3_DC_Drive/L2_Ph3_L2_Ph3_DC_Drive.srcs/sources_1/bd/design_1/ip/design_1_axi_gpio_1_0/design_1_axi_gpio_1_0_board.xdc] for cell 'design_1_i/axi_gpio_1/U0'
Parsing XDC File [c:/Programming/PESC_FPGA/L2_Ph3_L2_Ph3_DC_Drive/L2_Ph3_L2_Ph3_DC_Drive.srcs/sources_1/bd/design_1/ip/design_1_axi_gpio_1_0/design_1_axi_gpio_1_0.xdc] for cell 'design_1_i/axi_gpio_1/U0'
Finished Parsing XDC File [c:/Programming/PESC_FPGA/L2_Ph3_L2_Ph3_DC_Drive/L2_Ph3_L2_Ph3_DC_Drive.srcs/sources_1/bd/design_1/ip/design_1_axi_gpio_1_0/design_1_axi_gpio_1_0.xdc] for cell 'design_1_i/axi_gpio_1/U0'
Parsing XDC File [c:/Programming/PESC_FPGA/L2_Ph3_L2_Ph3_DC_Drive/L2_Ph3_L2_Ph3_DC_Drive.srcs/sources_1/bd/design_1/ip/design_1_processing_system7_0_0/design_1_processing_system7_0_0.xdc] for cell 'design_1_i/processing_system7_0/inst'
Finished Parsing XDC File [c:/Programming/PESC_FPGA/L2_Ph3_L2_Ph3_DC_Drive/L2_Ph3_L2_Ph3_DC_Drive.srcs/sources_1/bd/design_1/ip/design_1_processing_system7_0_0/design_1_processing_system7_0_0.xdc] for cell 'design_1_i/processing_system7_0/inst'
Parsing XDC File [c:/Programming/PESC_FPGA/L2_Ph3_L2_Ph3_DC_Drive/L2_Ph3_L2_Ph3_DC_Drive.srcs/sources_1/bd/design_1/ip/design_1_rst_ps7_0_100M_0/design_1_rst_ps7_0_100M_0_board.xdc] for cell 'design_1_i/rst_ps7_0_100M/U0'
Finished Parsing XDC File [c:/Programming/PESC_FPGA/L2_Ph3_L2_Ph3_DC_Drive/L2_Ph3_L2_Ph3_DC_Drive.srcs/sources_1/bd/design_1/ip/design_1_rst_ps7_0_100M_0/design_1_rst_ps7_0_100M_0_board.xdc] for cell 'design_1_i/rst_ps7_0_100M/U0'
Parsing XDC File [c:/Programming/PESC_FPGA/L2_Ph3_L2_Ph3_DC_Drive/L2_Ph3_L2_Ph3_DC_Drive.srcs/sources_1/bd/design_1/ip/design_1_rst_ps7_0_100M_0/design_1_rst_ps7_0_100M_0.xdc] for cell 'design_1_i/rst_ps7_0_100M/U0'
Finished Parsing XDC File [c:/Programming/PESC_FPGA/L2_Ph3_L2_Ph3_DC_Drive/L2_Ph3_L2_Ph3_DC_Drive.srcs/sources_1/bd/design_1/ip/design_1_rst_ps7_0_100M_0/design_1_rst_ps7_0_100M_0.xdc] for cell 'design_1_i/rst_ps7_0_100M/U0'
Parsing XDC File [c:/Programming/PESC_FPGA/L2_Ph3_L2_Ph3_DC_Drive/L2_Ph3_L2_Ph3_DC_Drive.srcs/sources_1/bd/design_1/ip/design_1_signal_in_0/design_1_signal_in_0_board.xdc] for cell 'design_1_i/signal_in/U0'
Finished Parsing XDC File [c:/Programming/PESC_FPGA/L2_Ph3_L2_Ph3_DC_Drive/L2_Ph3_L2_Ph3_DC_Drive.srcs/sources_1/bd/design_1/ip/design_1_signal_in_0/design_1_signal_in_0_board.xdc] for cell 'design_1_i/signal_in/U0'
Parsing XDC File [c:/Programming/PESC_FPGA/L2_Ph3_L2_Ph3_DC_Drive/L2_Ph3_L2_Ph3_DC_Drive.srcs/sources_1/bd/design_1/ip/design_1_signal_in_0/design_1_signal_in_0.xdc] for cell 'design_1_i/signal_in/U0'
Finished Parsing XDC File [c:/Programming/PESC_FPGA/L2_Ph3_L2_Ph3_DC_Drive/L2_Ph3_L2_Ph3_DC_Drive.srcs/sources_1/bd/design_1/ip/design_1_signal_in_0/design_1_signal_in_0.xdc] for cell 'design_1_i/signal_in/U0'
Parsing XDC File [c:/Programming/PESC_FPGA/L2_Ph3_L2_Ph3_DC_Drive/L2_Ph3_L2_Ph3_DC_Drive.srcs/sources_1/bd/design_1/ip/design_1_testled_0/design_1_testled_0_board.xdc] for cell 'design_1_i/testled/U0'
Finished Parsing XDC File [c:/Programming/PESC_FPGA/L2_Ph3_L2_Ph3_DC_Drive/L2_Ph3_L2_Ph3_DC_Drive.srcs/sources_1/bd/design_1/ip/design_1_testled_0/design_1_testled_0_board.xdc] for cell 'design_1_i/testled/U0'
Parsing XDC File [c:/Programming/PESC_FPGA/L2_Ph3_L2_Ph3_DC_Drive/L2_Ph3_L2_Ph3_DC_Drive.srcs/sources_1/bd/design_1/ip/design_1_testled_0/design_1_testled_0.xdc] for cell 'design_1_i/testled/U0'
Finished Parsing XDC File [c:/Programming/PESC_FPGA/L2_Ph3_L2_Ph3_DC_Drive/L2_Ph3_L2_Ph3_DC_Drive.srcs/sources_1/bd/design_1/ip/design_1_testled_0/design_1_testled_0.xdc] for cell 'design_1_i/testled/U0'
Parsing XDC File [c:/Programming/PESC_FPGA/L2_Ph3_L2_Ph3_DC_Drive/L2_Ph3_L2_Ph3_DC_Drive.srcs/sources_1/bd/design_1/ip/design_1_xadc_wiz_0_0/design_1_xadc_wiz_0_0.xdc] for cell 'design_1_i/xadc_wiz_0/U0'
Finished Parsing XDC File [c:/Programming/PESC_FPGA/L2_Ph3_L2_Ph3_DC_Drive/L2_Ph3_L2_Ph3_DC_Drive.srcs/sources_1/bd/design_1/ip/design_1_xadc_wiz_0_0/design_1_xadc_wiz_0_0.xdc] for cell 'design_1_i/xadc_wiz_0/U0'
Parsing XDC File [c:/Programming/PESC_FPGA/L2_Ph3_L2_Ph3_DC_Drive/L2_Ph3_L2_Ph3_DC_Drive.srcs/sources_1/bd/design_1/ip/design_1_blankingtimecorr_0_2/constrs/blankingtimecorr.xdc] for cell 'design_1_i/converter_1/blankingtimecorr_0/inst'
Finished Parsing XDC File [c:/Programming/PESC_FPGA/L2_Ph3_L2_Ph3_DC_Drive/L2_Ph3_L2_Ph3_DC_Drive.srcs/sources_1/bd/design_1/ip/design_1_blankingtimecorr_0_2/constrs/blankingtimecorr.xdc] for cell 'design_1_i/converter_1/blankingtimecorr_0/inst'
Parsing XDC File [c:/Programming/PESC_FPGA/L2_Ph3_L2_Ph3_DC_Drive/L2_Ph3_L2_Ph3_DC_Drive.srcs/sources_1/bd/design_1/ip/design_1_blankingtimecorr_0_0/constrs/blankingtimecorr.xdc] for cell 'design_1_i/converter_2/blankingtimecorr_0/inst'
Finished Parsing XDC File [c:/Programming/PESC_FPGA/L2_Ph3_L2_Ph3_DC_Drive/L2_Ph3_L2_Ph3_DC_Drive.srcs/sources_1/bd/design_1/ip/design_1_blankingtimecorr_0_0/constrs/blankingtimecorr.xdc] for cell 'design_1_i/converter_2/blankingtimecorr_0/inst'
Parsing XDC File [c:/Programming/PESC_FPGA/L2_Ph3_L2_Ph3_DC_Drive/L2_Ph3_L2_Ph3_DC_Drive.srcs/sources_1/bd/design_1/ip/design_1_emu_dc_0_1/constrs/emu_dc.xdc] for cell 'design_1_i/emu_dc_0/inst'
Finished Parsing XDC File [c:/Programming/PESC_FPGA/L2_Ph3_L2_Ph3_DC_Drive/L2_Ph3_L2_Ph3_DC_Drive.srcs/sources_1/bd/design_1/ip/design_1_emu_dc_0_1/constrs/emu_dc.xdc] for cell 'design_1_i/emu_dc_0/inst'
Parsing XDC File [c:/Programming/PESC_FPGA/L2_Ph3_L2_Ph3_DC_Drive/L2_Ph3_L2_Ph3_DC_Drive.srcs/sources_1/bd/design_1/ip/design_1_ENDAT22_S_0_0/src/endat22/constraints.xdc] for cell 'design_1_i/ENDAT22_S_1/U0'
Finished Parsing XDC File [c:/Programming/PESC_FPGA/L2_Ph3_L2_Ph3_DC_Drive/L2_Ph3_L2_Ph3_DC_Drive.srcs/sources_1/bd/design_1/ip/design_1_ENDAT22_S_0_0/src/endat22/constraints.xdc] for cell 'design_1_i/ENDAT22_S_1/U0'
Parsing XDC File [C:/Programming/PESC_FPGA/L2_Ph3_L2_Ph3_DC_Drive/L2_Ph3_L2_Ph3_DC_Drive.srcs/constrs_1/imports/Constraints/PicoZed7030_prosessorkort_IO.xdc]
Finished Parsing XDC File [C:/Programming/PESC_FPGA/L2_Ph3_L2_Ph3_DC_Drive/L2_Ph3_L2_Ph3_DC_Drive.srcs/constrs_1/imports/Constraints/PicoZed7030_prosessorkort_IO.xdc]
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.019 . Memory (MB): peak = 925.781 ; gain = 0.000
INFO: [Project 1-111] Unisim Transformation Summary:
  A total of 17 instances were transformed.
  IOBUF => IOBUF (IBUF, OBUFT): 17 instances

11 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
link_design completed successfully
link_design: Time (s): cpu = 00:00:19 ; elapsed = 00:00:25 . Memory (MB): peak = 925.781 ; gain = 572.090
Command: opt_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z030'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z030'
Running DRC as a precondition to command opt_design

Starting DRC Task
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Project 1-461] DRC finished with 0 Errors
INFO: [Project 1-462] Please refer to the DRC report (report_drc) for more information.

Time (s): cpu = 00:00:02 ; elapsed = 00:00:01 . Memory (MB): peak = 937.926 ; gain = 12.145

Starting Cache Timing Information Task
INFO: [Timing 38-35] Done setting XDC timing constraints.
Ending Cache Timing Information Task | Checksum: 167c7f125

Time (s): cpu = 00:00:13 ; elapsed = 00:00:13 . Memory (MB): peak = 1526.805 ; gain = 588.879

Starting Logic Optimization Task

Phase 1 Retarget
INFO: [Opt 31-138] Pushed 6 inverter(s) to 76 load pin(s).
INFO: [Opt 31-49] Retargeted 0 cell(s).
Phase 1 Retarget | Checksum: 1234cdb18

Time (s): cpu = 00:00:05 ; elapsed = 00:00:04 . Memory (MB): peak = 1676.891 ; gain = 0.145
INFO: [Opt 31-389] Phase Retarget created 2995 cells and removed 3363 cells
INFO: [Opt 31-1021] In phase Retarget, 18 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 2 Constant propagation
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Phase 2 Constant propagation | Checksum: 151bca0d8

Time (s): cpu = 00:00:06 ; elapsed = 00:00:05 . Memory (MB): peak = 1676.891 ; gain = 0.145
INFO: [Opt 31-389] Phase Constant propagation created 90 cells and removed 336 cells
INFO: [Opt 31-1021] In phase Constant propagation, 1 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 3 Sweep
Phase 3 Sweep | Checksum: f0da18e7

Time (s): cpu = 00:00:11 ; elapsed = 00:00:10 . Memory (MB): peak = 1676.891 ; gain = 0.145
INFO: [Opt 31-389] Phase Sweep created 41 cells and removed 3177 cells
INFO: [Opt 31-1021] In phase Sweep, 1 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 4 BUFG optimization
Phase 4 BUFG optimization | Checksum: f0da18e7

Time (s): cpu = 00:00:12 ; elapsed = 00:00:11 . Memory (MB): peak = 1676.891 ; gain = 0.145
INFO: [Opt 31-662] Phase BUFG optimization created 0 cells of which 0 are BUFGs and removed 0 cells.

Phase 5 Shift Register Optimization
INFO: [Opt 31-1064] SRL Remap converted 0 SRLs to 0 registers and converted 0 registers of register chains to 0 SRLs
Phase 5 Shift Register Optimization | Checksum: f0da18e7

Time (s): cpu = 00:00:12 ; elapsed = 00:00:11 . Memory (MB): peak = 1676.891 ; gain = 0.145
INFO: [Opt 31-389] Phase Shift Register Optimization created 0 cells and removed 0 cells
INFO: [Opt 31-1021] In phase Shift Register Optimization, 1 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 6 Post Processing Netlist
Phase 6 Post Processing Netlist | Checksum: 1702bf2fe

Time (s): cpu = 00:00:13 ; elapsed = 00:00:12 . Memory (MB): peak = 1676.891 ; gain = 0.145
INFO: [Opt 31-389] Phase Post Processing Netlist created 0 cells and removed 0 cells
Opt_design Change Summary
=========================


-------------------------------------------------------------------------------------------------------------------------
|  Phase                        |  #Cells created  |  #Cells Removed  |  #Constrained objects preventing optimizations  |
-------------------------------------------------------------------------------------------------------------------------
|  Retarget                     |            2995  |            3363  |                                             18  |
|  Constant propagation         |              90  |             336  |                                              1  |
|  Sweep                        |              41  |            3177  |                                              1  |
|  BUFG optimization            |               0  |               0  |                                              0  |
|  Shift Register Optimization  |               0  |               0  |                                              1  |
|  Post Processing Netlist      |               0  |               0  |                                              0  |
-------------------------------------------------------------------------------------------------------------------------



Starting Connectivity Check Task

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.083 . Memory (MB): peak = 1676.891 ; gain = 0.000
Ending Logic Optimization Task | Checksum: 1a6b62edf

Time (s): cpu = 00:00:14 ; elapsed = 00:00:13 . Memory (MB): peak = 1676.891 ; gain = 0.145

Starting Power Optimization Task
INFO: [Pwropt 34-132] Skipping clock gating for clocks with a period < 2.00 ns.
Ending Power Optimization Task | Checksum: 1a6b62edf

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.043 . Memory (MB): peak = 1676.891 ; gain = 0.000

Starting Final Cleanup Task
Ending Final Cleanup Task | Checksum: 1a6b62edf

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 1676.891 ; gain = 0.000

Starting Netlist Obfuscation Task
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.015 . Memory (MB): peak = 1676.891 ; gain = 0.000
Ending Netlist Obfuscation Task | Checksum: 1a6b62edf

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.016 . Memory (MB): peak = 1676.891 ; gain = 0.000
INFO: [Common 17-83] Releasing license: Implementation
32 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
opt_design completed successfully
opt_design: Time (s): cpu = 00:00:32 ; elapsed = 00:00:30 . Memory (MB): peak = 1676.891 ; gain = 751.109
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.016 . Memory (MB): peak = 1676.891 ; gain = 0.000
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.134 . Memory (MB): peak = 1676.891 ; gain = 0.000
INFO: [Common 17-1381] The checkpoint 'C:/Programming/PESC_FPGA/L2_Ph3_L2_Ph3_DC_Drive/L2_Ph3_L2_Ph3_DC_Drive.runs/impl_1/design_1_wrapper_opt.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:14 ; elapsed = 00:00:08 . Memory (MB): peak = 1676.891 ; gain = 0.000
INFO: [runtcl-4] Executing : report_drc -file design_1_wrapper_drc_opted.rpt -pb design_1_wrapper_drc_opted.pb -rpx design_1_wrapper_drc_opted.rpx
Command: report_drc -file design_1_wrapper_drc_opted.rpt -pb design_1_wrapper_drc_opted.pb -rpx design_1_wrapper_drc_opted.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Coretcl 2-168] The results of DRC are in file C:/Programming/PESC_FPGA/L2_Ph3_L2_Ph3_DC_Drive/L2_Ph3_L2_Ph3_DC_Drive.runs/impl_1/design_1_wrapper_drc_opted.rpt.
report_drc completed successfully
report_drc: Time (s): cpu = 00:00:11 ; elapsed = 00:00:06 . Memory (MB): peak = 1676.891 ; gain = 0.000
Command: place_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z030'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z030'
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.
Running DRC as a precondition to command place_design
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.

Starting Placer Task
INFO: [Place 30-611] Multithreading enabled for place_design using a maximum of 2 CPUs

Phase 1 Placer Initialization

Phase 1.1 Placer Initialization Netlist Sorting
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.016 . Memory (MB): peak = 1676.891 ; gain = 0.000
Phase 1.1 Placer Initialization Netlist Sorting | Checksum: f03fd19f

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.027 . Memory (MB): peak = 1676.891 ; gain = 0.000
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.015 . Memory (MB): peak = 1676.891 ; gain = 0.000

Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device
INFO: [Timing 38-35] Done setting XDC timing constraints.
Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device | Checksum: 1bf9e9254

Time (s): cpu = 00:00:10 ; elapsed = 00:00:09 . Memory (MB): peak = 1676.891 ; gain = 0.000

Phase 1.3 Build Placer Netlist Model
Phase 1.3 Build Placer Netlist Model | Checksum: 24765eda4

Time (s): cpu = 00:00:22 ; elapsed = 00:00:17 . Memory (MB): peak = 1816.926 ; gain = 140.035

Phase 1.4 Constrain Clocks/Macros
Phase 1.4 Constrain Clocks/Macros | Checksum: 24765eda4

Time (s): cpu = 00:00:22 ; elapsed = 00:00:17 . Memory (MB): peak = 1816.926 ; gain = 140.035
Phase 1 Placer Initialization | Checksum: 24765eda4

Time (s): cpu = 00:00:22 ; elapsed = 00:00:17 . Memory (MB): peak = 1816.926 ; gain = 140.035

Phase 2 Global Placement

Phase 2.1 Floorplanning
Phase 2.1 Floorplanning | Checksum: 2b60e7688

Time (s): cpu = 00:00:26 ; elapsed = 00:00:19 . Memory (MB): peak = 1816.926 ; gain = 140.035

Phase 2.2 Global Placement Core

Phase 2.2.1 Physical Synthesis In Placer
INFO: [Physopt 32-65] No nets found for high-fanout optimization.
INFO: [Physopt 32-232] Optimized 0 net. Created 0 new instance.
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
INFO: [Physopt 32-670] No setup violation found.  DSP Register Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  Shift Register Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  BRAM Register Optimization was not performed.
INFO: [Physopt 32-949] No candidate nets found for HD net replication
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.016 . Memory (MB): peak = 1816.926 ; gain = 0.000

Summary of Physical Synthesis Optimizations
============================================


----------------------------------------------------------------------------------------------------------------------------------------
|  Optimization                  |  Added Cells  |  Removed Cells  |  Optimized Cells/Nets  |  Dont Touch  |  Iterations  |  Elapsed   |
----------------------------------------------------------------------------------------------------------------------------------------
|  Very High Fanout              |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  DSP Register                  |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  Shift Register                |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  BRAM Register                 |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  HD Interface Net Replication  |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  Total                         |            0  |              0  |                     0  |           0  |           2  |  00:00:00  |
----------------------------------------------------------------------------------------------------------------------------------------


Phase 2.2.1 Physical Synthesis In Placer | Checksum: 150a053cd

Time (s): cpu = 00:01:08 ; elapsed = 00:00:43 . Memory (MB): peak = 1816.926 ; gain = 140.035
Phase 2.2 Global Placement Core | Checksum: 1dca867a0

Time (s): cpu = 00:01:10 ; elapsed = 00:00:45 . Memory (MB): peak = 1816.926 ; gain = 140.035
Phase 2 Global Placement | Checksum: 1dca867a0

Time (s): cpu = 00:01:10 ; elapsed = 00:00:45 . Memory (MB): peak = 1816.926 ; gain = 140.035

Phase 3 Detail Placement

Phase 3.1 Commit Multi Column Macros
Phase 3.1 Commit Multi Column Macros | Checksum: 29e13ccf4

Time (s): cpu = 00:01:14 ; elapsed = 00:00:47 . Memory (MB): peak = 1816.926 ; gain = 140.035

Phase 3.2 Commit Most Macros & LUTRAMs
Phase 3.2 Commit Most Macros & LUTRAMs | Checksum: 2af9ae6cd

Time (s): cpu = 00:01:20 ; elapsed = 00:00:51 . Memory (MB): peak = 1816.926 ; gain = 140.035

Phase 3.3 Area Swap Optimization
Phase 3.3 Area Swap Optimization | Checksum: 22a68c9ea

Time (s): cpu = 00:01:21 ; elapsed = 00:00:52 . Memory (MB): peak = 1816.926 ; gain = 140.035

Phase 3.4 Pipeline Register Optimization
Phase 3.4 Pipeline Register Optimization | Checksum: 23a14a8a3

Time (s): cpu = 00:01:21 ; elapsed = 00:00:52 . Memory (MB): peak = 1816.926 ; gain = 140.035

Phase 3.5 Small Shape Detail Placement
Phase 3.5 Small Shape Detail Placement | Checksum: 267d9a3f3

Time (s): cpu = 00:01:30 ; elapsed = 00:01:01 . Memory (MB): peak = 1816.926 ; gain = 140.035

Phase 3.6 Re-assign LUT pins
Phase 3.6 Re-assign LUT pins | Checksum: 21fa85ef7

Time (s): cpu = 00:01:32 ; elapsed = 00:01:03 . Memory (MB): peak = 1816.926 ; gain = 140.035

Phase 3.7 Pipeline Register Optimization
Phase 3.7 Pipeline Register Optimization | Checksum: 25b73b3d9

Time (s): cpu = 00:01:32 ; elapsed = 00:01:03 . Memory (MB): peak = 1816.926 ; gain = 140.035
Phase 3 Detail Placement | Checksum: 25b73b3d9

Time (s): cpu = 00:01:32 ; elapsed = 00:01:03 . Memory (MB): peak = 1816.926 ; gain = 140.035

Phase 4 Post Placement Optimization and Clean-Up

Phase 4.1 Post Commit Optimization
INFO: [Timing 38-35] Done setting XDC timing constraints.

Phase 4.1.1 Post Placement Optimization
Post Placement Optimization Initialization | Checksum: d512f292

Phase 4.1.1.1 BUFG Insertion
INFO: [Place 46-56] BUFG insertion identified 0 candidate nets. Inserted BUFG: 0, Replicated BUFG Driver: 0, Skipped due to Placement/Routing Conflicts: 0, Skipped due to Timing Degradation: 0, Skipped due to Illegal Netlist: 0.
Phase 4.1.1.1 BUFG Insertion | Checksum: d512f292

Time (s): cpu = 00:01:44 ; elapsed = 00:01:11 . Memory (MB): peak = 1824.082 ; gain = 147.191
INFO: [Place 30-746] Post Placement Timing Summary WNS=0.539. For the most accurate timing information please run report_timing.
Phase 4.1.1 Post Placement Optimization | Checksum: 5c497f6c

Time (s): cpu = 00:01:46 ; elapsed = 00:01:14 . Memory (MB): peak = 1824.082 ; gain = 147.191
Phase 4.1 Post Commit Optimization | Checksum: 5c497f6c

Time (s): cpu = 00:01:46 ; elapsed = 00:01:14 . Memory (MB): peak = 1824.082 ; gain = 147.191

Phase 4.2 Post Placement Cleanup
Phase 4.2 Post Placement Cleanup | Checksum: 5c497f6c

Time (s): cpu = 00:01:47 ; elapsed = 00:01:14 . Memory (MB): peak = 1824.082 ; gain = 147.191

Phase 4.3 Placer Reporting
Phase 4.3 Placer Reporting | Checksum: 5c497f6c

Time (s): cpu = 00:01:47 ; elapsed = 00:01:14 . Memory (MB): peak = 1824.082 ; gain = 147.191

Phase 4.4 Final Placement Cleanup
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.016 . Memory (MB): peak = 1824.082 ; gain = 0.000
Phase 4.4 Final Placement Cleanup | Checksum: 7be91738

Time (s): cpu = 00:01:47 ; elapsed = 00:01:14 . Memory (MB): peak = 1824.082 ; gain = 147.191
Phase 4 Post Placement Optimization and Clean-Up | Checksum: 7be91738

Time (s): cpu = 00:01:47 ; elapsed = 00:01:15 . Memory (MB): peak = 1824.082 ; gain = 147.191
Ending Placer Task | Checksum: 4af07147

Time (s): cpu = 00:01:47 ; elapsed = 00:01:15 . Memory (MB): peak = 1824.082 ; gain = 147.191
INFO: [Common 17-83] Releasing license: Implementation
59 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
place_design completed successfully
place_design: Time (s): cpu = 00:01:51 ; elapsed = 00:01:17 . Memory (MB): peak = 1824.082 ; gain = 147.191
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.015 . Memory (MB): peak = 1824.082 ; gain = 0.000
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:12 ; elapsed = 00:00:04 . Memory (MB): peak = 1830.523 ; gain = 6.441
INFO: [Common 17-1381] The checkpoint 'C:/Programming/PESC_FPGA/L2_Ph3_L2_Ph3_DC_Drive/L2_Ph3_L2_Ph3_DC_Drive.runs/impl_1/design_1_wrapper_placed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:20 ; elapsed = 00:00:09 . Memory (MB): peak = 1830.523 ; gain = 6.441
INFO: [runtcl-4] Executing : report_io -file design_1_wrapper_io_placed.rpt
report_io: Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.118 . Memory (MB): peak = 1830.523 ; gain = 0.000
INFO: [runtcl-4] Executing : report_utilization -file design_1_wrapper_utilization_placed.rpt -pb design_1_wrapper_utilization_placed.pb
INFO: [runtcl-4] Executing : report_control_sets -verbose -file design_1_wrapper_control_sets_placed.rpt
report_control_sets: Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.696 . Memory (MB): peak = 1830.523 ; gain = 0.000
Command: route_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z030'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z030'
Running DRC as a precondition to command route_design
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.


Starting Routing Task
INFO: [Route 35-254] Multithreading enabled for route_design using a maximum of 2 CPUs
Checksum: PlaceDB: 20c8a398 ConstDB: 0 ShapeSum: 2a27cdaf RouteDB: 0

Phase 1 Build RT Design
Phase 1 Build RT Design | Checksum: 183282791

Time (s): cpu = 00:01:00 ; elapsed = 00:00:46 . Memory (MB): peak = 1960.848 ; gain = 127.562
Post Restoration Checksum: NetGraph: de97eb5e NumContArr: a4903c33 Constraints: 0 Timing: 0

Phase 2 Router Initialization

Phase 2.1 Create Timer
Phase 2.1 Create Timer | Checksum: 183282791

Time (s): cpu = 00:01:00 ; elapsed = 00:00:46 . Memory (MB): peak = 1989.902 ; gain = 156.617

Phase 2.2 Fix Topology Constraints
Phase 2.2 Fix Topology Constraints | Checksum: 183282791

Time (s): cpu = 00:01:00 ; elapsed = 00:00:47 . Memory (MB): peak = 1999.008 ; gain = 165.723

Phase 2.3 Pre Route Cleanup
Phase 2.3 Pre Route Cleanup | Checksum: 183282791

Time (s): cpu = 00:01:00 ; elapsed = 00:00:47 . Memory (MB): peak = 1999.008 ; gain = 165.723
 Number of Nodes with overlaps = 0

Phase 2.4 Update Timing
Phase 2.4 Update Timing | Checksum: 1c88c0c8e

Time (s): cpu = 00:01:13 ; elapsed = 00:00:55 . Memory (MB): peak = 2043.133 ; gain = 209.848
INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.536  | TNS=0.000  | WHS=-0.317 | THS=-187.081|

Phase 2 Router Initialization | Checksum: 139fb980a

Time (s): cpu = 00:01:21 ; elapsed = 00:01:00 . Memory (MB): peak = 2142.957 ; gain = 309.672

Router Utilization Summary
  Global Vertical Routing Utilization    = 0 %
  Global Horizontal Routing Utilization  = 0 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 27037
    (Failed Nets is the sum of unrouted and partially routed nets)
  Number of Unrouted Nets             = 27037
  Number of Partially Routed Nets     = 0
  Number of Node Overlaps             = 0


Phase 3 Initial Routing
Phase 3 Initial Routing | Checksum: 17a7879d2

Time (s): cpu = 00:01:28 ; elapsed = 00:01:04 . Memory (MB): peak = 2142.957 ; gain = 309.672

Phase 4 Rip-up And Reroute

Phase 4.1 Global Iteration 0
 Number of Nodes with overlaps = 2389
 Number of Nodes with overlaps = 128
 Number of Nodes with overlaps = 2
 Number of Nodes with overlaps = 0
INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.412  | TNS=0.000  | WHS=N/A    | THS=N/A    |

Phase 4.1 Global Iteration 0 | Checksum: 1dcad6230

Time (s): cpu = 00:01:48 ; elapsed = 00:01:17 . Memory (MB): peak = 2142.957 ; gain = 309.672
Phase 4 Rip-up And Reroute | Checksum: 1dcad6230

Time (s): cpu = 00:01:48 ; elapsed = 00:01:17 . Memory (MB): peak = 2142.957 ; gain = 309.672

Phase 5 Delay and Skew Optimization

Phase 5.1 Delay CleanUp

Phase 5.1.1 Update Timing
Phase 5.1.1 Update Timing | Checksum: 12cc97f2a

Time (s): cpu = 00:01:50 ; elapsed = 00:01:18 . Memory (MB): peak = 2142.957 ; gain = 309.672
INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.412  | TNS=0.000  | WHS=N/A    | THS=N/A    |

Phase 5.1 Delay CleanUp | Checksum: 12cc97f2a

Time (s): cpu = 00:01:50 ; elapsed = 00:01:18 . Memory (MB): peak = 2142.957 ; gain = 309.672

Phase 5.2 Clock Skew Optimization
Phase 5.2 Clock Skew Optimization | Checksum: 12cc97f2a

Time (s): cpu = 00:01:50 ; elapsed = 00:01:18 . Memory (MB): peak = 2142.957 ; gain = 309.672
Phase 5 Delay and Skew Optimization | Checksum: 12cc97f2a

Time (s): cpu = 00:01:50 ; elapsed = 00:01:18 . Memory (MB): peak = 2142.957 ; gain = 309.672

Phase 6 Post Hold Fix

Phase 6.1 Hold Fix Iter

Phase 6.1.1 Update Timing
Phase 6.1.1 Update Timing | Checksum: 21d6f2006

Time (s): cpu = 00:01:52 ; elapsed = 00:01:19 . Memory (MB): peak = 2142.957 ; gain = 309.672
INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.412  | TNS=0.000  | WHS=0.041  | THS=0.000  |

Phase 6.1 Hold Fix Iter | Checksum: 1b5e0414e

Time (s): cpu = 00:01:53 ; elapsed = 00:01:19 . Memory (MB): peak = 2142.957 ; gain = 309.672
Phase 6 Post Hold Fix | Checksum: 1b5e0414e

Time (s): cpu = 00:01:53 ; elapsed = 00:01:19 . Memory (MB): peak = 2142.957 ; gain = 309.672

Phase 7 Route finalize

Router Utilization Summary
  Global Vertical Routing Utilization    = 4.11923 %
  Global Horizontal Routing Utilization  = 5.40383 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 0
    (Failed Nets is the sum of unrouted and partially routed nets)
  Number of Unrouted Nets             = 0
  Number of Partially Routed Nets     = 0
  Number of Node Overlaps             = 0

Phase 7 Route finalize | Checksum: 1fb840a62

Time (s): cpu = 00:01:53 ; elapsed = 00:01:20 . Memory (MB): peak = 2142.957 ; gain = 309.672

Phase 8 Verifying routed nets

 Verification completed successfully
Phase 8 Verifying routed nets | Checksum: 1fb840a62

Time (s): cpu = 00:01:53 ; elapsed = 00:01:20 . Memory (MB): peak = 2142.957 ; gain = 309.672

Phase 9 Depositing Routes
Phase 9 Depositing Routes | Checksum: 13b4032b0

Time (s): cpu = 00:01:56 ; elapsed = 00:01:24 . Memory (MB): peak = 2142.957 ; gain = 309.672

Phase 10 Post Router Timing
INFO: [Route 35-57] Estimated Timing Summary | WNS=0.412  | TNS=0.000  | WHS=0.041  | THS=0.000  |

INFO: [Route 35-327] The final timing numbers are based on the router estimated timing analysis. For a complete and accurate timing signoff, please run report_timing_summary.
Phase 10 Post Router Timing | Checksum: 13b4032b0

Time (s): cpu = 00:01:56 ; elapsed = 00:01:24 . Memory (MB): peak = 2142.957 ; gain = 309.672
INFO: [Route 35-16] Router Completed Successfully

Time (s): cpu = 00:01:56 ; elapsed = 00:01:24 . Memory (MB): peak = 2142.957 ; gain = 309.672

Routing Is Done.
INFO: [Common 17-83] Releasing license: Implementation
77 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
route_design completed successfully
route_design: Time (s): cpu = 00:02:02 ; elapsed = 00:01:27 . Memory (MB): peak = 2142.957 ; gain = 312.434
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.016 . Memory (MB): peak = 2142.957 ; gain = 0.000
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:17 ; elapsed = 00:00:06 . Memory (MB): peak = 2142.957 ; gain = 0.000
INFO: [Common 17-1381] The checkpoint 'C:/Programming/PESC_FPGA/L2_Ph3_L2_Ph3_DC_Drive/L2_Ph3_L2_Ph3_DC_Drive.runs/impl_1/design_1_wrapper_routed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:23 ; elapsed = 00:00:11 . Memory (MB): peak = 2142.957 ; gain = 0.000
INFO: [runtcl-4] Executing : report_drc -file design_1_wrapper_drc_routed.rpt -pb design_1_wrapper_drc_routed.pb -rpx design_1_wrapper_drc_routed.rpx
Command: report_drc -file design_1_wrapper_drc_routed.rpt -pb design_1_wrapper_drc_routed.pb -rpx design_1_wrapper_drc_routed.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Coretcl 2-168] The results of DRC are in file C:/Programming/PESC_FPGA/L2_Ph3_L2_Ph3_DC_Drive/L2_Ph3_L2_Ph3_DC_Drive.runs/impl_1/design_1_wrapper_drc_routed.rpt.
report_drc completed successfully
report_drc: Time (s): cpu = 00:00:18 ; elapsed = 00:00:11 . Memory (MB): peak = 2142.957 ; gain = 0.000
INFO: [runtcl-4] Executing : report_methodology -file design_1_wrapper_methodology_drc_routed.rpt -pb design_1_wrapper_methodology_drc_routed.pb -rpx design_1_wrapper_methodology_drc_routed.rpx
Command: report_methodology -file design_1_wrapper_methodology_drc_routed.rpt -pb design_1_wrapper_methodology_drc_routed.pb -rpx design_1_wrapper_methodology_drc_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [DRC 23-133] Running Methodology with 2 threads
INFO: [Coretcl 2-1520] The results of Report Methodology are in file C:/Programming/PESC_FPGA/L2_Ph3_L2_Ph3_DC_Drive/L2_Ph3_L2_Ph3_DC_Drive.runs/impl_1/design_1_wrapper_methodology_drc_routed.rpt.
report_methodology completed successfully
report_methodology: Time (s): cpu = 00:00:22 ; elapsed = 00:00:12 . Memory (MB): peak = 2202.258 ; gain = 59.301
INFO: [runtcl-4] Executing : report_power -file design_1_wrapper_power_routed.rpt -pb design_1_wrapper_power_summary_routed.pb -rpx design_1_wrapper_power_routed.rpx
Command: report_power -file design_1_wrapper_power_routed.rpt -pb design_1_wrapper_power_summary_routed.pb -rpx design_1_wrapper_power_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation
WARNING: [Power 33-332] Found switching activity that implies high-fanout reset nets being asserted for excessive periods of time which may result in inaccurate power analysis.
Resolution: To review and fix problems, please run Power Constraints Advisor in the GUI from Tools > Power Constraints Advisor or run report_power with the -advisory option to generate a text report.
89 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered.
report_power completed successfully
report_power: Time (s): cpu = 00:00:17 ; elapsed = 00:00:11 . Memory (MB): peak = 2204.242 ; gain = 1.984
INFO: [runtcl-4] Executing : report_route_status -file design_1_wrapper_route_status.rpt -pb design_1_wrapper_route_status.pb
INFO: [runtcl-4] Executing : report_timing_summary -max_paths 10 -file design_1_wrapper_timing_summary_routed.rpt -pb design_1_wrapper_timing_summary_routed.pb -rpx design_1_wrapper_timing_summary_routed.rpx -warn_on_violation 
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -1, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 2 CPUs
INFO: [runtcl-4] Executing : report_incremental_reuse -file design_1_wrapper_incremental_reuse_routed.rpt
INFO: [Vivado_Tcl 4-1062] Incremental flow is disabled. No incremental reuse Info to report.
INFO: [runtcl-4] Executing : report_clock_utilization -file design_1_wrapper_clock_utilization_routed.rpt
INFO: [runtcl-4] Executing : report_bus_skew -warn_on_violation -file design_1_wrapper_bus_skew_routed.rpt -pb design_1_wrapper_bus_skew_routed.pb -rpx design_1_wrapper_bus_skew_routed.rpx
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -1, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 2 CPUs
Command: write_bitstream -force design_1_wrapper.bit
Attempting to get a license for feature 'Implementation' and/or device 'xc7z030'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z030'
Running DRC as a precondition to command write_bitstream
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 2 threads
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/converter_1/AD_filter_block/U0/USER_LOGIC_I/Accumulator_generate[0].accumulator_array_reg[0] input design_1_i/converter_1/AD_filter_block/U0/USER_LOGIC_I/Accumulator_generate[0].accumulator_array_reg[0]/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/converter_1/AD_filter_block/U0/USER_LOGIC_I/Accumulator_generate[0].accumulator_array_reg[0] input design_1_i/converter_1/AD_filter_block/U0/USER_LOGIC_I/Accumulator_generate[0].accumulator_array_reg[0]/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/converter_1/AD_filter_block/U0/USER_LOGIC_I/Accumulator_generate[1].accumulator_array_reg[1] input design_1_i/converter_1/AD_filter_block/U0/USER_LOGIC_I/Accumulator_generate[1].accumulator_array_reg[1]/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/converter_1/AD_filter_block/U0/USER_LOGIC_I/Accumulator_generate[1].accumulator_array_reg[1] input design_1_i/converter_1/AD_filter_block/U0/USER_LOGIC_I/Accumulator_generate[1].accumulator_array_reg[1]/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/converter_1/AD_filter_block/U0/USER_LOGIC_I/Accumulator_generate[2].accumulator_array_reg[2] input design_1_i/converter_1/AD_filter_block/U0/USER_LOGIC_I/Accumulator_generate[2].accumulator_array_reg[2]/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/converter_1/AD_filter_block/U0/USER_LOGIC_I/Accumulator_generate[2].accumulator_array_reg[2] input design_1_i/converter_1/AD_filter_block/U0/USER_LOGIC_I/Accumulator_generate[2].accumulator_array_reg[2]/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/converter_1/AD_filter_block/U0/USER_LOGIC_I/Accumulator_generate[3].accumulator_array_reg[3] input design_1_i/converter_1/AD_filter_block/U0/USER_LOGIC_I/Accumulator_generate[3].accumulator_array_reg[3]/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/converter_1/AD_filter_block/U0/USER_LOGIC_I/Accumulator_generate[3].accumulator_array_reg[3] input design_1_i/converter_1/AD_filter_block/U0/USER_LOGIC_I/Accumulator_generate[3].accumulator_array_reg[3]/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/converter_1/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[0].accumulator_array_reg[0] input design_1_i/converter_1/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[0].accumulator_array_reg[0]/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/converter_1/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[0].accumulator_array_reg[0] input design_1_i/converter_1/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[0].accumulator_array_reg[0]/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/converter_1/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[1].accumulator_array_reg[1] input design_1_i/converter_1/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[1].accumulator_array_reg[1]/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/converter_1/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[1].accumulator_array_reg[1] input design_1_i/converter_1/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[1].accumulator_array_reg[1]/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/converter_1/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[2].accumulator_array_reg[2] input design_1_i/converter_1/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[2].accumulator_array_reg[2]/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/converter_1/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[2].accumulator_array_reg[2] input design_1_i/converter_1/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[2].accumulator_array_reg[2]/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/converter_1/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[3].accumulator_array_reg[3] input design_1_i/converter_1/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[3].accumulator_array_reg[3]/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/converter_1/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[3].accumulator_array_reg[3] input design_1_i/converter_1/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[3].accumulator_array_reg[3]/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/converter_1/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[4].accumulator_array_reg[4] input design_1_i/converter_1/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[4].accumulator_array_reg[4]/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/converter_1/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[4].accumulator_array_reg[4] input design_1_i/converter_1/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[4].accumulator_array_reg[4]/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/converter_1/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[5].accumulator_array_reg[5] input design_1_i/converter_1/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[5].accumulator_array_reg[5]/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/converter_1/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[5].accumulator_array_reg[5] input design_1_i/converter_1/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[5].accumulator_array_reg[5]/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/converter_1/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[6].accumulator_array_reg[6] input design_1_i/converter_1/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[6].accumulator_array_reg[6]/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/converter_1/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[6].accumulator_array_reg[6] input design_1_i/converter_1/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[6].accumulator_array_reg[6]/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/converter_1/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[7].accumulator_array_reg[7] input design_1_i/converter_1/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[7].accumulator_array_reg[7]/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/converter_1/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[7].accumulator_array_reg[7] input design_1_i/converter_1/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[7].accumulator_array_reg[7]/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/converter_2/AD_filter_block/U0/USER_LOGIC_I/Accumulator_generate[0].accumulator_array_reg[0] input design_1_i/converter_2/AD_filter_block/U0/USER_LOGIC_I/Accumulator_generate[0].accumulator_array_reg[0]/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/converter_2/AD_filter_block/U0/USER_LOGIC_I/Accumulator_generate[0].accumulator_array_reg[0] input design_1_i/converter_2/AD_filter_block/U0/USER_LOGIC_I/Accumulator_generate[0].accumulator_array_reg[0]/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/converter_2/AD_filter_block/U0/USER_LOGIC_I/Accumulator_generate[1].accumulator_array_reg[1] input design_1_i/converter_2/AD_filter_block/U0/USER_LOGIC_I/Accumulator_generate[1].accumulator_array_reg[1]/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/converter_2/AD_filter_block/U0/USER_LOGIC_I/Accumulator_generate[1].accumulator_array_reg[1] input design_1_i/converter_2/AD_filter_block/U0/USER_LOGIC_I/Accumulator_generate[1].accumulator_array_reg[1]/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/converter_2/AD_filter_block/U0/USER_LOGIC_I/Accumulator_generate[2].accumulator_array_reg[2] input design_1_i/converter_2/AD_filter_block/U0/USER_LOGIC_I/Accumulator_generate[2].accumulator_array_reg[2]/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/converter_2/AD_filter_block/U0/USER_LOGIC_I/Accumulator_generate[2].accumulator_array_reg[2] input design_1_i/converter_2/AD_filter_block/U0/USER_LOGIC_I/Accumulator_generate[2].accumulator_array_reg[2]/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/converter_2/AD_filter_block/U0/USER_LOGIC_I/Accumulator_generate[3].accumulator_array_reg[3] input design_1_i/converter_2/AD_filter_block/U0/USER_LOGIC_I/Accumulator_generate[3].accumulator_array_reg[3]/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/converter_2/AD_filter_block/U0/USER_LOGIC_I/Accumulator_generate[3].accumulator_array_reg[3] input design_1_i/converter_2/AD_filter_block/U0/USER_LOGIC_I/Accumulator_generate[3].accumulator_array_reg[3]/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/converter_2/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[0].accumulator_array_reg[0] input design_1_i/converter_2/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[0].accumulator_array_reg[0]/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/converter_2/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[0].accumulator_array_reg[0] input design_1_i/converter_2/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[0].accumulator_array_reg[0]/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/converter_2/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[1].accumulator_array_reg[1] input design_1_i/converter_2/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[1].accumulator_array_reg[1]/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/converter_2/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[1].accumulator_array_reg[1] input design_1_i/converter_2/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[1].accumulator_array_reg[1]/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/converter_2/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[2].accumulator_array_reg[2] input design_1_i/converter_2/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[2].accumulator_array_reg[2]/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/converter_2/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[2].accumulator_array_reg[2] input design_1_i/converter_2/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[2].accumulator_array_reg[2]/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/converter_2/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[3].accumulator_array_reg[3] input design_1_i/converter_2/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[3].accumulator_array_reg[3]/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/converter_2/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[3].accumulator_array_reg[3] input design_1_i/converter_2/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[3].accumulator_array_reg[3]/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/converter_2/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[4].accumulator_array_reg[4] input design_1_i/converter_2/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[4].accumulator_array_reg[4]/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/converter_2/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[4].accumulator_array_reg[4] input design_1_i/converter_2/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[4].accumulator_array_reg[4]/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/converter_2/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[5].accumulator_array_reg[5] input design_1_i/converter_2/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[5].accumulator_array_reg[5]/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/converter_2/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[5].accumulator_array_reg[5] input design_1_i/converter_2/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[5].accumulator_array_reg[5]/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/converter_2/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[6].accumulator_array_reg[6] input design_1_i/converter_2/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[6].accumulator_array_reg[6]/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/converter_2/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[6].accumulator_array_reg[6] input design_1_i/converter_2/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[6].accumulator_array_reg[6]/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/converter_2/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[7].accumulator_array_reg[7] input design_1_i/converter_2/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[7].accumulator_array_reg[7]/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/converter_2/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[7].accumulator_array_reg[7] input design_1_i/converter_2/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[7].accumulator_array_reg[7]/C[47:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/da_converter/U0/USER_LOGIC_I/mult_s_reg input design_1_i/da_converter/U0/USER_LOGIC_I/mult_s_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/da_converter/U0/USER_LOGIC_I/mult_s_reg input design_1_i/da_converter/U0/USER_LOGIC_I/mult_s_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/la/comp0.core_instance0/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1 output design_1_i/emu_dc_0/inst/emu_dc_struct/la/comp0.core_instance0/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/mult/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1 output design_1_i/emu_dc_0/inst/emu_dc_struct/mult/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/mult1/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[0].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1 output design_1_i/emu_dc_0/inst/emu_dc_struct/mult1/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[0].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/mult1/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1 output design_1_i/emu_dc_0/inst/emu_dc_struct/mult1/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/mult12/comp2.core_instance2/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[3].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1 output design_1_i/emu_dc_0/inst/emu_dc_struct/mult12/comp2.core_instance2/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[3].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/mult2/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1 output design_1_i/emu_dc_0/inst/emu_dc_struct/mult2/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/mult3/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[0].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1 output design_1_i/emu_dc_0/inst/emu_dc_struct/mult3/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[0].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/mult3/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1 output design_1_i/emu_dc_0/inst/emu_dc_struct/mult3/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/mult5/comp3.core_instance3/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1 output design_1_i/emu_dc_0/inst/emu_dc_struct/mult5/comp3.core_instance3/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/mult6/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[0].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1 output design_1_i/emu_dc_0/inst/emu_dc_struct/mult6/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[0].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/mult6/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1 output design_1_i/emu_dc_0/inst/emu_dc_struct/mult6/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/mult7/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[0].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1 output design_1_i/emu_dc_0/inst/emu_dc_struct/mult7/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[0].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/mult7/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1 output design_1_i/emu_dc_0/inst/emu_dc_struct/mult7/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/mult8/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1 output design_1_i/emu_dc_0/inst/emu_dc_struct/mult8/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/mult9/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1 output design_1_i/emu_dc_0/inst/emu_dc_struct/mult9/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/n_2/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1 output design_1_i/emu_dc_0/inst/emu_dc_struct/n_2/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/ra_ia/comp4.core_instance4/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1 output design_1_i/emu_dc_0/inst/emu_dc_struct/ra_ia/comp4.core_instance4/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/sign_n_n_2/comp5.core_instance5/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[0].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1 output design_1_i/emu_dc_0/inst/emu_dc_struct/sign_n_n_2/comp5.core_instance5/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[0].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/tf/comp0.core_instance0/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1 output design_1_i/emu_dc_0/inst/emu_dc_struct/tf/comp0.core_instance0/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/converter_1/AD_filter_block/U0/USER_LOGIC_I/Accumulator_generate[0].accumulator_array_reg[0] multiplier stage design_1_i/converter_1/AD_filter_block/U0/USER_LOGIC_I/Accumulator_generate[0].accumulator_array_reg[0]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/converter_1/AD_filter_block/U0/USER_LOGIC_I/Accumulator_generate[1].accumulator_array_reg[1] multiplier stage design_1_i/converter_1/AD_filter_block/U0/USER_LOGIC_I/Accumulator_generate[1].accumulator_array_reg[1]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/converter_1/AD_filter_block/U0/USER_LOGIC_I/Accumulator_generate[2].accumulator_array_reg[2] multiplier stage design_1_i/converter_1/AD_filter_block/U0/USER_LOGIC_I/Accumulator_generate[2].accumulator_array_reg[2]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/converter_1/AD_filter_block/U0/USER_LOGIC_I/Accumulator_generate[3].accumulator_array_reg[3] multiplier stage design_1_i/converter_1/AD_filter_block/U0/USER_LOGIC_I/Accumulator_generate[3].accumulator_array_reg[3]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/converter_1/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[0].accumulator_array_reg[0] multiplier stage design_1_i/converter_1/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[0].accumulator_array_reg[0]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/converter_1/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[1].accumulator_array_reg[1] multiplier stage design_1_i/converter_1/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[1].accumulator_array_reg[1]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/converter_1/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[2].accumulator_array_reg[2] multiplier stage design_1_i/converter_1/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[2].accumulator_array_reg[2]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/converter_1/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[3].accumulator_array_reg[3] multiplier stage design_1_i/converter_1/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[3].accumulator_array_reg[3]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/converter_1/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[4].accumulator_array_reg[4] multiplier stage design_1_i/converter_1/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[4].accumulator_array_reg[4]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/converter_1/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[5].accumulator_array_reg[5] multiplier stage design_1_i/converter_1/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[5].accumulator_array_reg[5]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/converter_1/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[6].accumulator_array_reg[6] multiplier stage design_1_i/converter_1/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[6].accumulator_array_reg[6]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/converter_1/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[7].accumulator_array_reg[7] multiplier stage design_1_i/converter_1/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[7].accumulator_array_reg[7]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/converter_2/AD_filter_block/U0/USER_LOGIC_I/Accumulator_generate[0].accumulator_array_reg[0] multiplier stage design_1_i/converter_2/AD_filter_block/U0/USER_LOGIC_I/Accumulator_generate[0].accumulator_array_reg[0]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/converter_2/AD_filter_block/U0/USER_LOGIC_I/Accumulator_generate[1].accumulator_array_reg[1] multiplier stage design_1_i/converter_2/AD_filter_block/U0/USER_LOGIC_I/Accumulator_generate[1].accumulator_array_reg[1]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/converter_2/AD_filter_block/U0/USER_LOGIC_I/Accumulator_generate[2].accumulator_array_reg[2] multiplier stage design_1_i/converter_2/AD_filter_block/U0/USER_LOGIC_I/Accumulator_generate[2].accumulator_array_reg[2]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/converter_2/AD_filter_block/U0/USER_LOGIC_I/Accumulator_generate[3].accumulator_array_reg[3] multiplier stage design_1_i/converter_2/AD_filter_block/U0/USER_LOGIC_I/Accumulator_generate[3].accumulator_array_reg[3]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/converter_2/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[0].accumulator_array_reg[0] multiplier stage design_1_i/converter_2/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[0].accumulator_array_reg[0]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/converter_2/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[1].accumulator_array_reg[1] multiplier stage design_1_i/converter_2/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[1].accumulator_array_reg[1]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/converter_2/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[2].accumulator_array_reg[2] multiplier stage design_1_i/converter_2/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[2].accumulator_array_reg[2]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/converter_2/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[3].accumulator_array_reg[3] multiplier stage design_1_i/converter_2/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[3].accumulator_array_reg[3]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/converter_2/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[4].accumulator_array_reg[4] multiplier stage design_1_i/converter_2/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[4].accumulator_array_reg[4]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/converter_2/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[5].accumulator_array_reg[5] multiplier stage design_1_i/converter_2/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[5].accumulator_array_reg[5]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/converter_2/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[6].accumulator_array_reg[6] multiplier stage design_1_i/converter_2/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[6].accumulator_array_reg[6]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/converter_2/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[7].accumulator_array_reg[7] multiplier stage design_1_i/converter_2/Moving_integral/U0/USER_LOGIC_I/Accumulator_generate[7].accumulator_array_reg[7]/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/la/comp0.core_instance0/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1 multiplier stage design_1_i/emu_dc_0/inst/emu_dc_struct/la/comp0.core_instance0/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/la/comp0.core_instance0/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[1].use_dsp.use_dsp48e1.iDSP48E1 multiplier stage design_1_i/emu_dc_0/inst/emu_dc_struct/la/comp0.core_instance0/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[1].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/mult/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1 multiplier stage design_1_i/emu_dc_0/inst/emu_dc_struct/mult/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/mult/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[1].use_dsp.use_dsp48e1.iDSP48E1 multiplier stage design_1_i/emu_dc_0/inst/emu_dc_struct/mult/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[1].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/mult1/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[0].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1 multiplier stage design_1_i/emu_dc_0/inst/emu_dc_struct/mult1/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[0].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/mult1/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1 multiplier stage design_1_i/emu_dc_0/inst/emu_dc_struct/mult1/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/mult1/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[1].use_dsp.use_dsp48e1.iDSP48E1 multiplier stage design_1_i/emu_dc_0/inst/emu_dc_struct/mult1/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[1].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/mult12/comp2.core_instance2/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[3].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1 multiplier stage design_1_i/emu_dc_0/inst/emu_dc_struct/mult12/comp2.core_instance2/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[3].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/mult12/comp2.core_instance2/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[3].bppDSP48[1].use_dsp.use_dsp48e1.iDSP48E1 multiplier stage design_1_i/emu_dc_0/inst/emu_dc_struct/mult12/comp2.core_instance2/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[3].bppDSP48[1].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/mult2/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1 multiplier stage design_1_i/emu_dc_0/inst/emu_dc_struct/mult2/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/mult2/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[1].use_dsp.use_dsp48e1.iDSP48E1 multiplier stage design_1_i/emu_dc_0/inst/emu_dc_struct/mult2/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[1].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/mult3/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[0].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1 multiplier stage design_1_i/emu_dc_0/inst/emu_dc_struct/mult3/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[0].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/mult3/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1 multiplier stage design_1_i/emu_dc_0/inst/emu_dc_struct/mult3/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/mult3/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[1].use_dsp.use_dsp48e1.iDSP48E1 multiplier stage design_1_i/emu_dc_0/inst/emu_dc_struct/mult3/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[1].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/mult5/comp3.core_instance3/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[0].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1 multiplier stage design_1_i/emu_dc_0/inst/emu_dc_struct/mult5/comp3.core_instance3/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[0].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/mult5/comp3.core_instance3/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1 multiplier stage design_1_i/emu_dc_0/inst/emu_dc_struct/mult5/comp3.core_instance3/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/mult5/comp3.core_instance3/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[1].use_dsp.use_dsp48e1.iDSP48E1 multiplier stage design_1_i/emu_dc_0/inst/emu_dc_struct/mult5/comp3.core_instance3/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[1].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/mult6/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[0].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1 multiplier stage design_1_i/emu_dc_0/inst/emu_dc_struct/mult6/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[0].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/mult6/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1 multiplier stage design_1_i/emu_dc_0/inst/emu_dc_struct/mult6/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/mult6/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[1].use_dsp.use_dsp48e1.iDSP48E1 multiplier stage design_1_i/emu_dc_0/inst/emu_dc_struct/mult6/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[1].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/mult7/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[0].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1 multiplier stage design_1_i/emu_dc_0/inst/emu_dc_struct/mult7/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[0].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/mult7/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1 multiplier stage design_1_i/emu_dc_0/inst/emu_dc_struct/mult7/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/mult7/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[1].use_dsp.use_dsp48e1.iDSP48E1 multiplier stage design_1_i/emu_dc_0/inst/emu_dc_struct/mult7/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[1].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/mult8/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1 multiplier stage design_1_i/emu_dc_0/inst/emu_dc_struct/mult8/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/mult8/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[1].use_dsp.use_dsp48e1.iDSP48E1 multiplier stage design_1_i/emu_dc_0/inst/emu_dc_struct/mult8/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[1].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/mult9/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1 multiplier stage design_1_i/emu_dc_0/inst/emu_dc_struct/mult9/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/mult9/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[1].use_dsp.use_dsp48e1.iDSP48E1 multiplier stage design_1_i/emu_dc_0/inst/emu_dc_struct/mult9/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[1].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/n_2/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1 multiplier stage design_1_i/emu_dc_0/inst/emu_dc_struct/n_2/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/n_2/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[1].use_dsp.use_dsp48e1.iDSP48E1 multiplier stage design_1_i/emu_dc_0/inst/emu_dc_struct/n_2/comp1.core_instance1/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[1].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/ra_ia/comp4.core_instance4/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1 multiplier stage design_1_i/emu_dc_0/inst/emu_dc_struct/ra_ia/comp4.core_instance4/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/ra_ia/comp4.core_instance4/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[1].use_dsp.use_dsp48e1.iDSP48E1 multiplier stage design_1_i/emu_dc_0/inst/emu_dc_struct/ra_ia/comp4.core_instance4/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[1].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/sign_n_n_2/comp5.core_instance5/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[0].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1 multiplier stage design_1_i/emu_dc_0/inst/emu_dc_struct/sign_n_n_2/comp5.core_instance5/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[0].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/sign_n_n_2/comp5.core_instance5/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1 multiplier stage design_1_i/emu_dc_0/inst/emu_dc_struct/sign_n_n_2/comp5.core_instance5/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/tf/comp0.core_instance0/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1 multiplier stage design_1_i/emu_dc_0/inst/emu_dc_struct/tf/comp0.core_instance0/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[0].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/emu_dc_0/inst/emu_dc_struct/tf/comp0.core_instance0/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[1].use_dsp.use_dsp48e1.iDSP48E1 multiplier stage design_1_i/emu_dc_0/inst/emu_dc_struct/tf/comp0.core_instance0/U0/i_mult/gDSP.gDSP_only.iDSP/use_prim.appDSP48[1].bppDSP48[1].use_dsp.use_dsp48e1.iDSP48E1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
INFO: [Vivado 12-3199] DRC finished with 0 Errors, 128 Warnings
INFO: [Vivado 12-3200] Please refer to the DRC report (report_drc) for more information.
INFO: [Designutils 20-2272] Running write_bitstream with 2 threads.
Loading data files...
Loading site data...
Loading route data...
Processing options...
Creating bitmap...
Creating bitstream...
Writing bitstream ./design_1_wrapper.bit...
INFO: [Vivado 12-1842] Bitgen Completed Successfully.
INFO: [Common 17-83] Releasing license: Implementation
107 Infos, 129 Warnings, 0 Critical Warnings and 0 Errors encountered.
write_bitstream completed successfully
write_bitstream: Time (s): cpu = 00:01:01 ; elapsed = 00:00:42 . Memory (MB): peak = 2595.293 ; gain = 391.051
source C:/Programming/PESC_FPGA/L2_Ph3_L2_Ph3_DC_Drive/L2_Ph3_L2_Ph3_DC_Drive.srcs/utils_1/imports/L2_Ph3_L2_Ph3/makebin.tcl
Command: write_cfgmem -force -format BIN -interface SMAPx32 -disablebitswap -loadbit {up 0x0 design_1_wrapper.bit} design_1_wrapper.bin
Creating config memory files...
INFO: [Writecfgmem 68-23] Start address provided has been multiplied by a factor of 4 due to the use of interface SMAPX32.
Creating bitstream load up from address 0x00000000
Loading bitfile design_1_wrapper.bit
Memory size is calculated to be 8 MB
Writing file ./design_1_wrapper.bin
Writing log file ./design_1_wrapper.prm
===================================
Configuration Memory information
===================================
File Format        BIN
Interface          SMAPX32
Size               8M
Start Address      0x00000000
End Address        0x007FFFFF

Addr1         Addr2         Date                    File(s)
0x00000000    0x005B3F0B    Aug 30 14:24:07 2022    design_1_wrapper.bit
108 Infos, 129 Warnings, 0 Critical Warnings and 0 Errors encountered.
write_cfgmem completed successfully
INFO: [Common 17-206] Exiting Vivado at Tue Aug 30 14:24:10 2022...
